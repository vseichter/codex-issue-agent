name: Issue Assigned to vseichter

permissions:
  contents: write        # allow pushing commits and branches
  pull-requests: write   # allow creating pull requests
  issues: write          # allow updating issues if needed

on:
  issues:
    types: [assigned]

jobs:
  create-branch-and-pr:
    if: ${{ github.event.assignee.login == 'vseichter' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository (full clone)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Setup Node.js (>=20)
        uses: actions/setup-node@v3
        with:
          node-version: '>=20'

      - name: Install OpenAI Codex CLI
        run: npm install -g @openai/codex

      - name: Set OpenAI API Key
        run: echo "OPENAI_API_KEY=${{ secrets.open_api_key }}" >> $GITHUB_ENV
        shell: bash

      - name: Create or check out branch for issue
        id: create_branch
        shell: bash
        run: |
          # Build a URL-safe branch name: issue-<num>-<sanitized-title>
          title="${{ github.event.issue.title }}"
          num="${{ github.event.issue.number }}"
          sanitized=$(echo "$title" \
            | tr '[:upper:]' '[:lower:]' \
            | sed -E 's/[^a-z0-9]+/-/g' \
            | sed -E 's/^-+|-+$//g')
          branch="issue-${num}-${sanitized}"

          # Configure Git identity
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # If local branch exists, check it out
          if git rev-parse --verify --quiet "$branch"; then
            echo "Local branch '$branch' exists → checking out"
            git checkout "$branch"

          # Else if remote branch exists, fetch & track it
          elif git ls-remote --exit-code --heads origin "$branch"; then
            echo "Remote branch '$branch' exists → fetching & checking out"
            git fetch origin "$branch"
            git checkout -b "$branch" origin/"$branch"

          # Otherwise create new branch from default and push
          else
            echo "Creating new branch '$branch' from default branch"
            git checkout -b "$branch"
            git push -u origin "$branch"
          fi

          # Expose branch name to later steps
          echo "branch=$branch" >> $GITHUB_OUTPUT

      - name: Run Codex CLI in full-auto mode with issue description
        shell: bash
        run: |
          num="${{ github.event.issue.number }}"
          title="${{ github.event.issue.title }}"
          body="${{ github.event.issue.body }}"
          prompt="Issue #${num}: ${title}\n\n${body}"
          codex --full-auto --quiet "$prompt"

      - name: Commit & push Codex CLI changes
        shell: bash
        run: |
          branch="${{ steps.create_branch.outputs.branch }}"

          # Ensure Git identity is set
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Stage all new/modified/deleted files
          git add -A

          # Commit if there are staged changes
          if git diff --cached --quiet; then
            echo "⚠️ No changes to commit"
          else
            git commit -m "chore: apply Codex CLI changes for issue #${{ github.event.issue.number }}"
          fi

          # Push local HEAD to the remote branch
          git push origin "$branch":"$branch"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ steps.create_branch.outputs.branch }}
          title: "chore: apply Codex CLI changes for issue #${{ github.event.issue.number }}"
          body: |
            Automated PR to apply Codex CLI changes for issue #${{ github.event.issue.number }}: ${{ github.event.issue.title }}
          base: main

      - name: Notify assignment
        shell: bash
        run: |
          echo "Issue #${{ github.event.issue.number }} assigned to vseichter"
